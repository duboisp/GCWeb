

/*
Build scrip that

* Create and organize Jekyll template
* Create and generate GCWeb build
* Create the GCWeb website



Component -> Related to the content area / main area

site-layouts -> Related to the whole site container (core template, baseline color + style..., commons/global utility)


Create a function to convert .hbs into .md

*/

// 1. copy defaults layout into _layout

Keep the website file at the same place, instead generate the jekyll template and the asset around it.


+++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++

Core folder


* components: Content area, aka main
* site: Scope whole site and baseline template
* template: Component arrangment and/or special style for specialized content



Reserved keyword

If folder name -> All subs items is about this item
If filename extension -> That current item is this item

If none -> That is product name or a category


Name must be uniques across the whole repos for that type of file.

Folder | name

* **/layout | layout-*.html: Jekyll template HTML file which would be copied over "_layouts" folder. 
* **/scss | *.scss: SASS file
	
	* base.scss -> General include
	* print.scss - > Print CSS
	* screen -> Screen media query
	* min-max...scss -> View port

* **/css | &.css: CSS file
* **/data | *-data.csv | *-data.json | *-data.json-ld :Data file to be copied over "data"

* **/demos | -demo.hbs | demo.html | *.md
	* **/demos/*.js | **/*-demos.js"js" are demos js file in demos folder are excluded from "concatenating" 
* **/docs | -docs.hbs | {lang}-docs.hbs

* **/includes/*.html | **/include-*.html : File to copy over "include folder"
* **/inc/*.html | **/*-inc/*.html | inc-*.html : File to copy over "include folder"

* **/tests : Folder containing test case
	* **/tests/**/*.js -> JS test
	* **/tests/**/*.html -> HTML test file, example - bug-1234.html

* **/reports : Not a demos but work similar and it is for reporting.

* assets : Supporting files, file inside are keep as is.

* helpers: Component that is render at the ends
* baseline: Start to include this first -> Usually this are override or about core HTML element
* utilities: Tools or common CSS/JS to support the development of the component. To be render after baseline.


Sequencing of overwritting
- baseline - Overwrite of pre-existing component, like wet-boew
- utilities - Not overrides, but required for good standing of components. (Was named "default" before)
- Any folder name - Components in this theme
	- Component can have dependencies, that will dictate the order, and then it's the file name
- helpers - Set of tools/JS/CSS to help to fix components if issues




A component can have a state like
- config.json-ld | config.yml

	- state: obselete | provisional | undefined (means stable)
	- type: stateless | interative




	1 - layout
	2 - include
	3 - scss

SCSS / JS - Priority order
 1  - sites - baseline
 2  - components - baseline
 3  - template - baseline
 4  - sites - utilities
 5  - sites - {{any}}
 6  - components - utilities
 7  - components - {{any}}
 8  - components - helpers
 9  - template - utilities
 10 - template - {{any}}
 11 - template - helpers
 12 - sites - helpers

 
// Create a Grunt task that would override those CSS include
// Separate site with component priorities
 
 
- layout
- -inc




Jekyll SASS

- Probably only use it to create the independant CSS file for the mélimélo.
- Using this feature for theme.css require to include bootstrap scss files and wet-boew scss files from node_modules


Multilingual,

The issue is the _data folder in the remote theme and the _config.yml is not available to website using a jekyll remote theme. The _data folder and _config.yml are used at the discretion of the immediate website.



* /sites/includes/i18n.html
* _include/i18n.html

* /sites/breadcrumbs/inc-breadcrumbs.html
* _include/breadcrumbs/inc-breadcrumbs.html

* /sites/headers-includes/header.html
* _include/headers-includes/header.html


+++++

Les sites web qui implementera ce theme devra soumettre un empty commit afin de re-builder le jeckyll theme.

Either:
* stackoverflow.com -> 24098792 contains a github action that Trigger GitHub pages rebuild
* git commit --allow-empty -m "Force rebuild of site"
* curl -u yourname:yourtoken -X POST https://api.github.com/repos/yourname/yourrepo/pages/builds
* curl -u githubUserName:0000000000000000 -X POST https://api.github.com/repos/duboisp/jekyll-website/pages/builds
